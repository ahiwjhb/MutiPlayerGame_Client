// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SyncPlayerPositionRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Network.Protocol {

  /// <summary>Holder for reflection information generated from SyncPlayerPositionRequest.proto</summary>
  public static partial class SyncPlayerPositionRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for SyncPlayerPositionRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SyncPlayerPositionRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9TeW5jUGxheWVyUG9zaXRpb25SZXF1ZXN0LnByb3RvEhBOZXR3b3JrLlBy",
            "b3RvY29sIioKB1ZlY3RvcjMSCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkKAXoY",
            "AyABKAIiywEKGVN5bmNQbGF5ZXJQb3NpdGlvblJlcXVlc3QSEwoLcmVxdWVz",
            "dGVySUQYASABKAUSMQoOcGxheWVyUG9zaXRpb24YAiABKAsyGS5OZXR3b3Jr",
            "LlByb3RvY29sLlZlY3RvcjMSMQoOcGxheWVyUm90YXRpb24YAyABKAsyGS5O",
            "ZXR3b3JrLlByb3RvY29sLlZlY3RvcjMSMwoQZ3VuTG9jYWxSb3RhdGlvbhgE",
            "IAEoCzIZLk5ldHdvcmsuUHJvdG9jb2wuVmVjdG9yM2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Network.Protocol.Vector3), global::Network.Protocol.Vector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Network.Protocol.SyncPlayerPositionRequest), global::Network.Protocol.SyncPlayerPositionRequest.Parser, new[]{ "RequesterID", "PlayerPosition", "PlayerRotation", "GunLocalRotation" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Vector3 : pb::IMessage<Vector3> {
    private static readonly pb::MessageParser<Vector3> _parser = new pb::MessageParser<Vector3>(() => new Vector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Network.Protocol.SyncPlayerPositionRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3(Vector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3 Clone() {
      return new Vector3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SyncPlayerPositionRequest : pb::IMessage<SyncPlayerPositionRequest> {
    private static readonly pb::MessageParser<SyncPlayerPositionRequest> _parser = new pb::MessageParser<SyncPlayerPositionRequest>(() => new SyncPlayerPositionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SyncPlayerPositionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Network.Protocol.SyncPlayerPositionRequestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncPlayerPositionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncPlayerPositionRequest(SyncPlayerPositionRequest other) : this() {
      requesterID_ = other.requesterID_;
      playerPosition_ = other.playerPosition_ != null ? other.playerPosition_.Clone() : null;
      playerRotation_ = other.playerRotation_ != null ? other.playerRotation_.Clone() : null;
      gunLocalRotation_ = other.gunLocalRotation_ != null ? other.gunLocalRotation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncPlayerPositionRequest Clone() {
      return new SyncPlayerPositionRequest(this);
    }

    /// <summary>Field number for the "requesterID" field.</summary>
    public const int RequesterIDFieldNumber = 1;
    private int requesterID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequesterID {
      get { return requesterID_; }
      set {
        requesterID_ = value;
      }
    }

    /// <summary>Field number for the "playerPosition" field.</summary>
    public const int PlayerPositionFieldNumber = 2;
    private global::Network.Protocol.Vector3 playerPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Network.Protocol.Vector3 PlayerPosition {
      get { return playerPosition_; }
      set {
        playerPosition_ = value;
      }
    }

    /// <summary>Field number for the "playerRotation" field.</summary>
    public const int PlayerRotationFieldNumber = 3;
    private global::Network.Protocol.Vector3 playerRotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Network.Protocol.Vector3 PlayerRotation {
      get { return playerRotation_; }
      set {
        playerRotation_ = value;
      }
    }

    /// <summary>Field number for the "gunLocalRotation" field.</summary>
    public const int GunLocalRotationFieldNumber = 4;
    private global::Network.Protocol.Vector3 gunLocalRotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Network.Protocol.Vector3 GunLocalRotation {
      get { return gunLocalRotation_; }
      set {
        gunLocalRotation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SyncPlayerPositionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SyncPlayerPositionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequesterID != other.RequesterID) return false;
      if (!object.Equals(PlayerPosition, other.PlayerPosition)) return false;
      if (!object.Equals(PlayerRotation, other.PlayerRotation)) return false;
      if (!object.Equals(GunLocalRotation, other.GunLocalRotation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequesterID != 0) hash ^= RequesterID.GetHashCode();
      if (playerPosition_ != null) hash ^= PlayerPosition.GetHashCode();
      if (playerRotation_ != null) hash ^= PlayerRotation.GetHashCode();
      if (gunLocalRotation_ != null) hash ^= GunLocalRotation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequesterID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequesterID);
      }
      if (playerPosition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerPosition);
      }
      if (playerRotation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerRotation);
      }
      if (gunLocalRotation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GunLocalRotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequesterID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequesterID);
      }
      if (playerPosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerPosition);
      }
      if (playerRotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerRotation);
      }
      if (gunLocalRotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GunLocalRotation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SyncPlayerPositionRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequesterID != 0) {
        RequesterID = other.RequesterID;
      }
      if (other.playerPosition_ != null) {
        if (playerPosition_ == null) {
          PlayerPosition = new global::Network.Protocol.Vector3();
        }
        PlayerPosition.MergeFrom(other.PlayerPosition);
      }
      if (other.playerRotation_ != null) {
        if (playerRotation_ == null) {
          PlayerRotation = new global::Network.Protocol.Vector3();
        }
        PlayerRotation.MergeFrom(other.PlayerRotation);
      }
      if (other.gunLocalRotation_ != null) {
        if (gunLocalRotation_ == null) {
          GunLocalRotation = new global::Network.Protocol.Vector3();
        }
        GunLocalRotation.MergeFrom(other.GunLocalRotation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequesterID = input.ReadInt32();
            break;
          }
          case 18: {
            if (playerPosition_ == null) {
              PlayerPosition = new global::Network.Protocol.Vector3();
            }
            input.ReadMessage(PlayerPosition);
            break;
          }
          case 26: {
            if (playerRotation_ == null) {
              PlayerRotation = new global::Network.Protocol.Vector3();
            }
            input.ReadMessage(PlayerRotation);
            break;
          }
          case 34: {
            if (gunLocalRotation_ == null) {
              GunLocalRotation = new global::Network.Protocol.Vector3();
            }
            input.ReadMessage(GunLocalRotation);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
