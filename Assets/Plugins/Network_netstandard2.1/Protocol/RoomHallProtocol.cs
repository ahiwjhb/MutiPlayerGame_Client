// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RoomHallProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Network.Protocol {

  /// <summary>Holder for reflection information generated from RoomHallProtocol.proto</summary>
  public static partial class RoomHallProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for RoomHallProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RoomHallProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZSb29tSGFsbFByb3RvY29sLnByb3RvEhBOZXR3b3JrLlByb3RvY29sGhJS",
            "b29tUHJvdG9jb2wucHJvdG8iqQEKD1Jvb21EaXNwbGF5SW5mbxIQCghyb29t",
            "TmFtZRgBIAEoCRIbChNjdXJyZW50UGVvcGxlTnVtYmVyGAIgASgFEhYKDm1h",
            "eFBlb3BsZUxpbWl0GAMgASgFEi4KCXJvb21TdGF0ZRgEIAEoDjIbLk5ldHdv",
            "cmsuUHJvdG9jb2wuUm9vbVN0YXRlEgoKAklEGAUgASgFEhMKC1Jvb21Pd25l",
            "cklEGAYgASgFInkKDVJvb21Jbm5lckluZm8SCgoCSUQYASABKAUSEwoLUm9v",
            "bU93bmVySUQYAiABKAUSFAoMcGxheWVySURMaXN0GAMgAygFEjEKDWNoYXRI",
            "aXN0b3JpZXMYBCADKAsyGi5OZXR3b3JrLlByb3RvY29sLkNoYXRJbmZvIlIK",
            "EUNyZWF0ZVJvb21SZXF1ZXN0EhMKC3JlcXVlc3RlcklEGAEgASgFEhAKCHJv",
            "b21OYW1lGAIgASgJEhYKDm1heFBlb3BsZUxpbWl0GAMgASgFIjoKD0pvaW5S",
            "b29tUmVxdWVzdBITCgtyZXF1ZXN0ZXJJRBgBIAEoBRISCgpqb2luUm9vbUlE",
            "GAIgASgFIiUKEVNlYXJjaFJvb21SZXF1ZXN0EhAKCHJvb21OYW1lGAEgASgJ",
            "IjoKD0V4aXRSb29tUmVxdWVzdBITCgtyZXF1ZXN0ZXJJRBgBIAEoBRISCgpl",
            "eGl0Um9vbUlEGAIgASgFIkMKDFJvb21MaXN0UGFjaxIzCghyb29tTGlzdBgB",
            "IAMoCzIhLk5ldHdvcmsuUHJvdG9jb2wuUm9vbURpc3BsYXlJbmZvKjAKCVJv",
            "b21TdGF0ZRIICgROb25lEAASCwoHV2F0dGluZxABEgwKCFN0YXJ0aW5nEAJi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Network.Protocol.RoomProtocolReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Network.Protocol.RoomState), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Network.Protocol.RoomDisplayInfo), global::Network.Protocol.RoomDisplayInfo.Parser, new[]{ "RoomName", "CurrentPeopleNumber", "MaxPeopleLimit", "RoomState", "ID", "RoomOwnerID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Network.Protocol.RoomInnerInfo), global::Network.Protocol.RoomInnerInfo.Parser, new[]{ "ID", "RoomOwnerID", "PlayerIDList", "ChatHistories" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Network.Protocol.CreateRoomRequest), global::Network.Protocol.CreateRoomRequest.Parser, new[]{ "RequesterID", "RoomName", "MaxPeopleLimit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Network.Protocol.JoinRoomRequest), global::Network.Protocol.JoinRoomRequest.Parser, new[]{ "RequesterID", "JoinRoomID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Network.Protocol.SearchRoomRequest), global::Network.Protocol.SearchRoomRequest.Parser, new[]{ "RoomName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Network.Protocol.ExitRoomRequest), global::Network.Protocol.ExitRoomRequest.Parser, new[]{ "RequesterID", "ExitRoomID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Network.Protocol.RoomListPack), global::Network.Protocol.RoomListPack.Parser, new[]{ "RoomList" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RoomState {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("Watting")] Watting = 1,
    [pbr::OriginalName("Starting")] Starting = 2,
  }

  #endregion

  #region Messages
  public sealed partial class RoomDisplayInfo : pb::IMessage<RoomDisplayInfo> {
    private static readonly pb::MessageParser<RoomDisplayInfo> _parser = new pb::MessageParser<RoomDisplayInfo>(() => new RoomDisplayInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomDisplayInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Network.Protocol.RoomHallProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomDisplayInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomDisplayInfo(RoomDisplayInfo other) : this() {
      roomName_ = other.roomName_;
      currentPeopleNumber_ = other.currentPeopleNumber_;
      maxPeopleLimit_ = other.maxPeopleLimit_;
      roomState_ = other.roomState_;
      iD_ = other.iD_;
      roomOwnerID_ = other.roomOwnerID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomDisplayInfo Clone() {
      return new RoomDisplayInfo(this);
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currentPeopleNumber" field.</summary>
    public const int CurrentPeopleNumberFieldNumber = 2;
    private int currentPeopleNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentPeopleNumber {
      get { return currentPeopleNumber_; }
      set {
        currentPeopleNumber_ = value;
      }
    }

    /// <summary>Field number for the "maxPeopleLimit" field.</summary>
    public const int MaxPeopleLimitFieldNumber = 3;
    private int maxPeopleLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPeopleLimit {
      get { return maxPeopleLimit_; }
      set {
        maxPeopleLimit_ = value;
      }
    }

    /// <summary>Field number for the "roomState" field.</summary>
    public const int RoomStateFieldNumber = 4;
    private global::Network.Protocol.RoomState roomState_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Network.Protocol.RoomState RoomState {
      get { return roomState_; }
      set {
        roomState_ = value;
      }
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 5;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "RoomOwnerID" field.</summary>
    public const int RoomOwnerIDFieldNumber = 6;
    private int roomOwnerID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomOwnerID {
      get { return roomOwnerID_; }
      set {
        roomOwnerID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomDisplayInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomDisplayInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (CurrentPeopleNumber != other.CurrentPeopleNumber) return false;
      if (MaxPeopleLimit != other.MaxPeopleLimit) return false;
      if (RoomState != other.RoomState) return false;
      if (ID != other.ID) return false;
      if (RoomOwnerID != other.RoomOwnerID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (CurrentPeopleNumber != 0) hash ^= CurrentPeopleNumber.GetHashCode();
      if (MaxPeopleLimit != 0) hash ^= MaxPeopleLimit.GetHashCode();
      if (RoomState != 0) hash ^= RoomState.GetHashCode();
      if (ID != 0) hash ^= ID.GetHashCode();
      if (RoomOwnerID != 0) hash ^= RoomOwnerID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (CurrentPeopleNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentPeopleNumber);
      }
      if (MaxPeopleLimit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxPeopleLimit);
      }
      if (RoomState != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RoomState);
      }
      if (ID != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ID);
      }
      if (RoomOwnerID != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RoomOwnerID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (CurrentPeopleNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentPeopleNumber);
      }
      if (MaxPeopleLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPeopleLimit);
      }
      if (RoomState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomState);
      }
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (RoomOwnerID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomOwnerID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomDisplayInfo other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.CurrentPeopleNumber != 0) {
        CurrentPeopleNumber = other.CurrentPeopleNumber;
      }
      if (other.MaxPeopleLimit != 0) {
        MaxPeopleLimit = other.MaxPeopleLimit;
      }
      if (other.RoomState != 0) {
        RoomState = other.RoomState;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.RoomOwnerID != 0) {
        RoomOwnerID = other.RoomOwnerID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            CurrentPeopleNumber = input.ReadInt32();
            break;
          }
          case 24: {
            MaxPeopleLimit = input.ReadInt32();
            break;
          }
          case 32: {
            RoomState = (global::Network.Protocol.RoomState) input.ReadEnum();
            break;
          }
          case 40: {
            ID = input.ReadInt32();
            break;
          }
          case 48: {
            RoomOwnerID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomInnerInfo : pb::IMessage<RoomInnerInfo> {
    private static readonly pb::MessageParser<RoomInnerInfo> _parser = new pb::MessageParser<RoomInnerInfo>(() => new RoomInnerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomInnerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Network.Protocol.RoomHallProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInnerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInnerInfo(RoomInnerInfo other) : this() {
      iD_ = other.iD_;
      roomOwnerID_ = other.roomOwnerID_;
      playerIDList_ = other.playerIDList_.Clone();
      chatHistories_ = other.chatHistories_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInnerInfo Clone() {
      return new RoomInnerInfo(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "RoomOwnerID" field.</summary>
    public const int RoomOwnerIDFieldNumber = 2;
    private int roomOwnerID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomOwnerID {
      get { return roomOwnerID_; }
      set {
        roomOwnerID_ = value;
      }
    }

    /// <summary>Field number for the "playerIDList" field.</summary>
    public const int PlayerIDListFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_playerIDList_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> playerIDList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PlayerIDList {
      get { return playerIDList_; }
    }

    /// <summary>Field number for the "chatHistories" field.</summary>
    public const int ChatHistoriesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Network.Protocol.ChatInfo> _repeated_chatHistories_codec
        = pb::FieldCodec.ForMessage(34, global::Network.Protocol.ChatInfo.Parser);
    private readonly pbc::RepeatedField<global::Network.Protocol.ChatInfo> chatHistories_ = new pbc::RepeatedField<global::Network.Protocol.ChatInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Network.Protocol.ChatInfo> ChatHistories {
      get { return chatHistories_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomInnerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomInnerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (RoomOwnerID != other.RoomOwnerID) return false;
      if(!playerIDList_.Equals(other.playerIDList_)) return false;
      if(!chatHistories_.Equals(other.chatHistories_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (RoomOwnerID != 0) hash ^= RoomOwnerID.GetHashCode();
      hash ^= playerIDList_.GetHashCode();
      hash ^= chatHistories_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (RoomOwnerID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomOwnerID);
      }
      playerIDList_.WriteTo(output, _repeated_playerIDList_codec);
      chatHistories_.WriteTo(output, _repeated_chatHistories_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (RoomOwnerID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomOwnerID);
      }
      size += playerIDList_.CalculateSize(_repeated_playerIDList_codec);
      size += chatHistories_.CalculateSize(_repeated_chatHistories_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomInnerInfo other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.RoomOwnerID != 0) {
        RoomOwnerID = other.RoomOwnerID;
      }
      playerIDList_.Add(other.playerIDList_);
      chatHistories_.Add(other.chatHistories_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            RoomOwnerID = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            playerIDList_.AddEntriesFrom(input, _repeated_playerIDList_codec);
            break;
          }
          case 34: {
            chatHistories_.AddEntriesFrom(input, _repeated_chatHistories_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateRoomRequest : pb::IMessage<CreateRoomRequest> {
    private static readonly pb::MessageParser<CreateRoomRequest> _parser = new pb::MessageParser<CreateRoomRequest>(() => new CreateRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Network.Protocol.RoomHallProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomRequest(CreateRoomRequest other) : this() {
      requesterID_ = other.requesterID_;
      roomName_ = other.roomName_;
      maxPeopleLimit_ = other.maxPeopleLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomRequest Clone() {
      return new CreateRoomRequest(this);
    }

    /// <summary>Field number for the "requesterID" field.</summary>
    public const int RequesterIDFieldNumber = 1;
    private int requesterID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequesterID {
      get { return requesterID_; }
      set {
        requesterID_ = value;
      }
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 2;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxPeopleLimit" field.</summary>
    public const int MaxPeopleLimitFieldNumber = 3;
    private int maxPeopleLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPeopleLimit {
      get { return maxPeopleLimit_; }
      set {
        maxPeopleLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequesterID != other.RequesterID) return false;
      if (RoomName != other.RoomName) return false;
      if (MaxPeopleLimit != other.MaxPeopleLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequesterID != 0) hash ^= RequesterID.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (MaxPeopleLimit != 0) hash ^= MaxPeopleLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequesterID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequesterID);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomName);
      }
      if (MaxPeopleLimit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxPeopleLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequesterID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequesterID);
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (MaxPeopleLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPeopleLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequesterID != 0) {
        RequesterID = other.RequesterID;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.MaxPeopleLimit != 0) {
        MaxPeopleLimit = other.MaxPeopleLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequesterID = input.ReadInt32();
            break;
          }
          case 18: {
            RoomName = input.ReadString();
            break;
          }
          case 24: {
            MaxPeopleLimit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomRequest : pb::IMessage<JoinRoomRequest> {
    private static readonly pb::MessageParser<JoinRoomRequest> _parser = new pb::MessageParser<JoinRoomRequest>(() => new JoinRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Network.Protocol.RoomHallProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest(JoinRoomRequest other) : this() {
      requesterID_ = other.requesterID_;
      joinRoomID_ = other.joinRoomID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest Clone() {
      return new JoinRoomRequest(this);
    }

    /// <summary>Field number for the "requesterID" field.</summary>
    public const int RequesterIDFieldNumber = 1;
    private int requesterID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequesterID {
      get { return requesterID_; }
      set {
        requesterID_ = value;
      }
    }

    /// <summary>Field number for the "joinRoomID" field.</summary>
    public const int JoinRoomIDFieldNumber = 2;
    private int joinRoomID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JoinRoomID {
      get { return joinRoomID_; }
      set {
        joinRoomID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequesterID != other.RequesterID) return false;
      if (JoinRoomID != other.JoinRoomID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequesterID != 0) hash ^= RequesterID.GetHashCode();
      if (JoinRoomID != 0) hash ^= JoinRoomID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequesterID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequesterID);
      }
      if (JoinRoomID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(JoinRoomID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequesterID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequesterID);
      }
      if (JoinRoomID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JoinRoomID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequesterID != 0) {
        RequesterID = other.RequesterID;
      }
      if (other.JoinRoomID != 0) {
        JoinRoomID = other.JoinRoomID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequesterID = input.ReadInt32();
            break;
          }
          case 16: {
            JoinRoomID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchRoomRequest : pb::IMessage<SearchRoomRequest> {
    private static readonly pb::MessageParser<SearchRoomRequest> _parser = new pb::MessageParser<SearchRoomRequest>(() => new SearchRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Network.Protocol.RoomHallProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRoomRequest(SearchRoomRequest other) : this() {
      roomName_ = other.roomName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRoomRequest Clone() {
      return new SearchRoomRequest(this);
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExitRoomRequest : pb::IMessage<ExitRoomRequest> {
    private static readonly pb::MessageParser<ExitRoomRequest> _parser = new pb::MessageParser<ExitRoomRequest>(() => new ExitRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExitRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Network.Protocol.RoomHallProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitRoomRequest(ExitRoomRequest other) : this() {
      requesterID_ = other.requesterID_;
      exitRoomID_ = other.exitRoomID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitRoomRequest Clone() {
      return new ExitRoomRequest(this);
    }

    /// <summary>Field number for the "requesterID" field.</summary>
    public const int RequesterIDFieldNumber = 1;
    private int requesterID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequesterID {
      get { return requesterID_; }
      set {
        requesterID_ = value;
      }
    }

    /// <summary>Field number for the "exitRoomID" field.</summary>
    public const int ExitRoomIDFieldNumber = 2;
    private int exitRoomID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExitRoomID {
      get { return exitRoomID_; }
      set {
        exitRoomID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExitRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExitRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequesterID != other.RequesterID) return false;
      if (ExitRoomID != other.ExitRoomID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequesterID != 0) hash ^= RequesterID.GetHashCode();
      if (ExitRoomID != 0) hash ^= ExitRoomID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequesterID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequesterID);
      }
      if (ExitRoomID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExitRoomID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequesterID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequesterID);
      }
      if (ExitRoomID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExitRoomID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExitRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequesterID != 0) {
        RequesterID = other.RequesterID;
      }
      if (other.ExitRoomID != 0) {
        ExitRoomID = other.ExitRoomID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequesterID = input.ReadInt32();
            break;
          }
          case 16: {
            ExitRoomID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomListPack : pb::IMessage<RoomListPack> {
    private static readonly pb::MessageParser<RoomListPack> _parser = new pb::MessageParser<RoomListPack>(() => new RoomListPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomListPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Network.Protocol.RoomHallProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListPack(RoomListPack other) : this() {
      roomList_ = other.roomList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListPack Clone() {
      return new RoomListPack(this);
    }

    /// <summary>Field number for the "roomList" field.</summary>
    public const int RoomListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Network.Protocol.RoomDisplayInfo> _repeated_roomList_codec
        = pb::FieldCodec.ForMessage(10, global::Network.Protocol.RoomDisplayInfo.Parser);
    private readonly pbc::RepeatedField<global::Network.Protocol.RoomDisplayInfo> roomList_ = new pbc::RepeatedField<global::Network.Protocol.RoomDisplayInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Network.Protocol.RoomDisplayInfo> RoomList {
      get { return roomList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomListPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomListPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roomList_.Equals(other.roomList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roomList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      roomList_.WriteTo(output, _repeated_roomList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roomList_.CalculateSize(_repeated_roomList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomListPack other) {
      if (other == null) {
        return;
      }
      roomList_.Add(other.roomList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roomList_.AddEntriesFrom(input, _repeated_roomList_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
